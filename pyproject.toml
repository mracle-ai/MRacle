[project]
name = "mracle"
version = "0.0.0"
description = "mracle"

readme = "README.md"

requires-python = "==3.11.7"

classifiers = [
    "Programming Language :: Python",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    ## APP
    "fastapi",
    "uvicorn",
    "python-multipart",
    "pydantic-settings>=2.4.0",
    ## MISC
    "toml",
]

[tool.uv]
dev-dependencies = [
    "ruff",
    ## DOCS
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings[python]",
    ## Jupyter
    "ipykernel",
]

[tool.ruff]
target-version = "py311"
line-length = 88
src = ["src"]
respect-gitignore = true

extend-include = [
    "*.ipynb"
]

extend-exclude = [
    "docs",
    "tests",
]

# Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]

[tool.ruff.format]
skip-magic-trailing-comma = false

[tool.ruff.lint]
ignore-init-module-imports = true

select = [
    "B", # flake8-bugbear
    "C", # flake8-comprehensions
    "C9", # mccabe
    # "D", # flake8-docstrings
    "E", # pycodestyle errors (default)
    "F", # pyflakes (default)
    "I", # isort
    "PD", # pandas-vet
    "PIE", # pie
    "PL", # pylint
    "PTH", # pathlib
    "Q", # flake8-quotes
    "RET", # return
    "RUF", # Enable all ruff-specific checks
    "SIM", # simplify
    "T20", # (disallow print statements) keep debugging statements out of the codebase
    "W", # pycodestyle warnings
    "ASYNC" # async
]

ignore = [
    "E501", # Line too long, handled by ruff formatter
    "D107", # "Missing docstring in __init__",
]

unfixable = [
    "F401" # Unused imports.
]

[tool.ruff.lint.flake8-import-conventions.extend-aliases]
some_alias = ""

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
combine-as-imports = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
